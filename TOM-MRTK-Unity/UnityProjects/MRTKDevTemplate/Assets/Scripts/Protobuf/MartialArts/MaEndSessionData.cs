// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ma_end_session_data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ma_end_session_data.proto</summary>
public static partial class MaEndSessionDataReflection {

  #region Descriptor
  /// <summary>File descriptor for ma_end_session_data.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MaEndSessionDataReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChltYV9lbmRfc2Vzc2lvbl9kYXRhLnByb3RvIlkKEE1hRW5kU2Vzc2lvbkRh",
          "dGESGAoQc2Vzc2lvbl9kdXJhdGlvbhgBIAIoCRIZChFpbnRlcnZhbF9kdXJh",
          "dGlvbhgCIAIoAhIQCghkYXRldGltZRgDIAIoAw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MaEndSessionData), global::MaEndSessionData.Parser, new[]{ "SessionDuration", "IntervalDuration", "Datetime" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class MaEndSessionData : pb::IMessage<MaEndSessionData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MaEndSessionData> _parser = new pb::MessageParser<MaEndSessionData>(() => new MaEndSessionData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<MaEndSessionData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MaEndSessionDataReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MaEndSessionData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MaEndSessionData(MaEndSessionData other) : this() {
    _hasBits0 = other._hasBits0;
    sessionDuration_ = other.sessionDuration_;
    intervalDuration_ = other.intervalDuration_;
    datetime_ = other.datetime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MaEndSessionData Clone() {
    return new MaEndSessionData(this);
  }

  /// <summary>Field number for the "session_duration" field.</summary>
  public const int SessionDurationFieldNumber = 1;
  private readonly static string SessionDurationDefaultValue = "";

  private string sessionDuration_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SessionDuration {
    get { return sessionDuration_ ?? SessionDurationDefaultValue; }
    set {
      sessionDuration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "session_duration" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSessionDuration {
    get { return sessionDuration_ != null; }
  }
  /// <summary>Clears the value of the "session_duration" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSessionDuration() {
    sessionDuration_ = null;
  }

  /// <summary>Field number for the "interval_duration" field.</summary>
  public const int IntervalDurationFieldNumber = 2;
  private readonly static float IntervalDurationDefaultValue = 0F;

  private float intervalDuration_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float IntervalDuration {
    get { if ((_hasBits0 & 1) != 0) { return intervalDuration_; } else { return IntervalDurationDefaultValue; } }
    set {
      _hasBits0 |= 1;
      intervalDuration_ = value;
    }
  }
  /// <summary>Gets whether the "interval_duration" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIntervalDuration {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "interval_duration" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIntervalDuration() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "datetime" field.</summary>
  public const int DatetimeFieldNumber = 3;
  private readonly static long DatetimeDefaultValue = 0L;

  private long datetime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long Datetime {
    get { if ((_hasBits0 & 2) != 0) { return datetime_; } else { return DatetimeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      datetime_ = value;
    }
  }
  /// <summary>Gets whether the "datetime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDatetime {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "datetime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDatetime() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as MaEndSessionData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(MaEndSessionData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SessionDuration != other.SessionDuration) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IntervalDuration, other.IntervalDuration)) return false;
    if (Datetime != other.Datetime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSessionDuration) hash ^= SessionDuration.GetHashCode();
    if (HasIntervalDuration) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IntervalDuration);
    if (HasDatetime) hash ^= Datetime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSessionDuration) {
      output.WriteRawTag(10);
      output.WriteString(SessionDuration);
    }
    if (HasIntervalDuration) {
      output.WriteRawTag(21);
      output.WriteFloat(IntervalDuration);
    }
    if (HasDatetime) {
      output.WriteRawTag(24);
      output.WriteInt64(Datetime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSessionDuration) {
      output.WriteRawTag(10);
      output.WriteString(SessionDuration);
    }
    if (HasIntervalDuration) {
      output.WriteRawTag(21);
      output.WriteFloat(IntervalDuration);
    }
    if (HasDatetime) {
      output.WriteRawTag(24);
      output.WriteInt64(Datetime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSessionDuration) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionDuration);
    }
    if (HasIntervalDuration) {
      size += 1 + 4;
    }
    if (HasDatetime) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Datetime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(MaEndSessionData other) {
    if (other == null) {
      return;
    }
    if (other.HasSessionDuration) {
      SessionDuration = other.SessionDuration;
    }
    if (other.HasIntervalDuration) {
      IntervalDuration = other.IntervalDuration;
    }
    if (other.HasDatetime) {
      Datetime = other.Datetime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SessionDuration = input.ReadString();
          break;
        }
        case 21: {
          IntervalDuration = input.ReadFloat();
          break;
        }
        case 24: {
          Datetime = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SessionDuration = input.ReadString();
          break;
        }
        case 21: {
          IntervalDuration = input.ReadFloat();
          break;
        }
        case 24: {
          Datetime = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
