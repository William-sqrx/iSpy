// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ma_punch_data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ma_punch_data.proto</summary>
public static partial class MaPunchDataReflection {

  #region Descriptor
  /// <summary>File descriptor for ma_punch_data.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MaPunchDataReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNtYV9wdW5jaF9kYXRhLnByb3RvGhNtYV9wdW5jaF90eXBlLnByb3RvIlcK",
          "CVB1bmNoRGF0YRIQCgRoYW5kGAEgASgFOgItMRIoCgpwdW5jaF90eXBlGAIg",
          "ASgOMgouUHVuY2hUeXBlOghMRUZUX0pBQhIOCgRuYW1lGAMgASgJOgA="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::MaPunchTypeReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PunchData), global::PunchData.Parser, new[]{ "Hand", "PunchType", "Name" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class PunchData : pb::IMessage<PunchData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PunchData> _parser = new pb::MessageParser<PunchData>(() => new PunchData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PunchData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MaPunchDataReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PunchData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PunchData(PunchData other) : this() {
    _hasBits0 = other._hasBits0;
    hand_ = other.hand_;
    punchType_ = other.punchType_;
    name_ = other.name_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PunchData Clone() {
    return new PunchData(this);
  }

  /// <summary>Field number for the "hand" field.</summary>
  public const int HandFieldNumber = 1;
  private readonly static int HandDefaultValue = -1;

  private int hand_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Hand {
    get { if ((_hasBits0 & 1) != 0) { return hand_; } else { return HandDefaultValue; } }
    set {
      _hasBits0 |= 1;
      hand_ = value;
    }
  }
  /// <summary>Gets whether the "hand" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHand {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "hand" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHand() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "punch_type" field.</summary>
  public const int PunchTypeFieldNumber = 2;
  private readonly static global::PunchType PunchTypeDefaultValue = global::PunchType.LeftJab;

  private global::PunchType punchType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PunchType PunchType {
    get { if ((_hasBits0 & 2) != 0) { return punchType_; } else { return PunchTypeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      punchType_ = value;
    }
  }
  /// <summary>Gets whether the "punch_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPunchType {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "punch_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPunchType() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 3;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PunchData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PunchData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Hand != other.Hand) return false;
    if (PunchType != other.PunchType) return false;
    if (Name != other.Name) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasHand) hash ^= Hand.GetHashCode();
    if (HasPunchType) hash ^= PunchType.GetHashCode();
    if (HasName) hash ^= Name.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasHand) {
      output.WriteRawTag(8);
      output.WriteInt32(Hand);
    }
    if (HasPunchType) {
      output.WriteRawTag(16);
      output.WriteEnum((int) PunchType);
    }
    if (HasName) {
      output.WriteRawTag(26);
      output.WriteString(Name);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasHand) {
      output.WriteRawTag(8);
      output.WriteInt32(Hand);
    }
    if (HasPunchType) {
      output.WriteRawTag(16);
      output.WriteEnum((int) PunchType);
    }
    if (HasName) {
      output.WriteRawTag(26);
      output.WriteString(Name);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasHand) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hand);
    }
    if (HasPunchType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PunchType);
    }
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PunchData other) {
    if (other == null) {
      return;
    }
    if (other.HasHand) {
      Hand = other.Hand;
    }
    if (other.HasPunchType) {
      PunchType = other.PunchType;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Hand = input.ReadInt32();
          break;
        }
        case 16: {
          PunchType = (global::PunchType) input.ReadEnum();
          break;
        }
        case 26: {
          Name = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Hand = input.ReadInt32();
          break;
        }
        case 16: {
          PunchType = (global::PunchType) input.ReadEnum();
          break;
        }
        case 26: {
          Name = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
