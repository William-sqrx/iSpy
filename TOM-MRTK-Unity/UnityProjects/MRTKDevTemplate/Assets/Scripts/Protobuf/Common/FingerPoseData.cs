// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: finger_pose_data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from finger_pose_data.proto</summary>
public static partial class FingerPoseDataReflection {

  #region Descriptor
  /// <summary>File descriptor for finger_pose_data.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static FingerPoseDataReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChZmaW5nZXJfcG9zZV9kYXRhLnByb3RvIp4BCg5GaW5nZXJQb3NlRGF0YRIT",
          "CghjYW1lcmFfeBgEIAEoAToBMBITCghjYW1lcmFfeRgFIAEoAToBMBITCghj",
          "YW1lcmFfehgGIAEoAToBMBIRCgdkZXRhaWxzGAcgASgJOgASEgoHd29ybGRf",
          "eBgIIAEoAToBMBISCgd3b3JsZF95GAkgASgBOgEwEhIKB3dvcmxkX3oYCiAB",
          "KAE6ATA="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::FingerPoseData), global::FingerPoseData.Parser, new[]{ "CameraX", "CameraY", "CameraZ", "Details", "WorldX", "WorldY", "WorldZ" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class FingerPoseData : pb::IMessage<FingerPoseData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<FingerPoseData> _parser = new pb::MessageParser<FingerPoseData>(() => new FingerPoseData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<FingerPoseData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::FingerPoseDataReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public FingerPoseData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public FingerPoseData(FingerPoseData other) : this() {
    _hasBits0 = other._hasBits0;
    cameraX_ = other.cameraX_;
    cameraY_ = other.cameraY_;
    cameraZ_ = other.cameraZ_;
    details_ = other.details_;
    worldX_ = other.worldX_;
    worldY_ = other.worldY_;
    worldZ_ = other.worldZ_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public FingerPoseData Clone() {
    return new FingerPoseData(this);
  }

  /// <summary>Field number for the "camera_x" field.</summary>
  public const int CameraXFieldNumber = 4;
  private readonly static double CameraXDefaultValue = 0D;

  private double cameraX_;
  /// <summary>
  ///  optional int64 time = 1 [default = -1];
  ///  optional int32 hand = 2 [default = -1];
  ///  optional int32 finger = 3 [default = -1];
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double CameraX {
    get { if ((_hasBits0 & 1) != 0) { return cameraX_; } else { return CameraXDefaultValue; } }
    set {
      _hasBits0 |= 1;
      cameraX_ = value;
    }
  }
  /// <summary>Gets whether the "camera_x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCameraX {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "camera_x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCameraX() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "camera_y" field.</summary>
  public const int CameraYFieldNumber = 5;
  private readonly static double CameraYDefaultValue = 0D;

  private double cameraY_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double CameraY {
    get { if ((_hasBits0 & 2) != 0) { return cameraY_; } else { return CameraYDefaultValue; } }
    set {
      _hasBits0 |= 2;
      cameraY_ = value;
    }
  }
  /// <summary>Gets whether the "camera_y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCameraY {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "camera_y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCameraY() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "camera_z" field.</summary>
  public const int CameraZFieldNumber = 6;
  private readonly static double CameraZDefaultValue = 0D;

  private double cameraZ_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double CameraZ {
    get { if ((_hasBits0 & 4) != 0) { return cameraZ_; } else { return CameraZDefaultValue; } }
    set {
      _hasBits0 |= 4;
      cameraZ_ = value;
    }
  }
  /// <summary>Gets whether the "camera_z" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCameraZ {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "camera_z" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCameraZ() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "details" field.</summary>
  public const int DetailsFieldNumber = 7;
  private readonly static string DetailsDefaultValue = "";

  private string details_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Details {
    get { return details_ ?? DetailsDefaultValue; }
    set {
      details_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "details" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDetails {
    get { return details_ != null; }
  }
  /// <summary>Clears the value of the "details" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDetails() {
    details_ = null;
  }

  /// <summary>Field number for the "world_x" field.</summary>
  public const int WorldXFieldNumber = 8;
  private readonly static double WorldXDefaultValue = 0D;

  private double worldX_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double WorldX {
    get { if ((_hasBits0 & 8) != 0) { return worldX_; } else { return WorldXDefaultValue; } }
    set {
      _hasBits0 |= 8;
      worldX_ = value;
    }
  }
  /// <summary>Gets whether the "world_x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWorldX {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "world_x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWorldX() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "world_y" field.</summary>
  public const int WorldYFieldNumber = 9;
  private readonly static double WorldYDefaultValue = 0D;

  private double worldY_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double WorldY {
    get { if ((_hasBits0 & 16) != 0) { return worldY_; } else { return WorldYDefaultValue; } }
    set {
      _hasBits0 |= 16;
      worldY_ = value;
    }
  }
  /// <summary>Gets whether the "world_y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWorldY {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "world_y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWorldY() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "world_z" field.</summary>
  public const int WorldZFieldNumber = 10;
  private readonly static double WorldZDefaultValue = 0D;

  private double worldZ_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double WorldZ {
    get { if ((_hasBits0 & 32) != 0) { return worldZ_; } else { return WorldZDefaultValue; } }
    set {
      _hasBits0 |= 32;
      worldZ_ = value;
    }
  }
  /// <summary>Gets whether the "world_z" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWorldZ {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "world_z" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWorldZ() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as FingerPoseData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(FingerPoseData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CameraX, other.CameraX)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CameraY, other.CameraY)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CameraZ, other.CameraZ)) return false;
    if (Details != other.Details) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WorldX, other.WorldX)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WorldY, other.WorldY)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WorldZ, other.WorldZ)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCameraX) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CameraX);
    if (HasCameraY) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CameraY);
    if (HasCameraZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CameraZ);
    if (HasDetails) hash ^= Details.GetHashCode();
    if (HasWorldX) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WorldX);
    if (HasWorldY) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WorldY);
    if (HasWorldZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WorldZ);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCameraX) {
      output.WriteRawTag(33);
      output.WriteDouble(CameraX);
    }
    if (HasCameraY) {
      output.WriteRawTag(41);
      output.WriteDouble(CameraY);
    }
    if (HasCameraZ) {
      output.WriteRawTag(49);
      output.WriteDouble(CameraZ);
    }
    if (HasDetails) {
      output.WriteRawTag(58);
      output.WriteString(Details);
    }
    if (HasWorldX) {
      output.WriteRawTag(65);
      output.WriteDouble(WorldX);
    }
    if (HasWorldY) {
      output.WriteRawTag(73);
      output.WriteDouble(WorldY);
    }
    if (HasWorldZ) {
      output.WriteRawTag(81);
      output.WriteDouble(WorldZ);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCameraX) {
      output.WriteRawTag(33);
      output.WriteDouble(CameraX);
    }
    if (HasCameraY) {
      output.WriteRawTag(41);
      output.WriteDouble(CameraY);
    }
    if (HasCameraZ) {
      output.WriteRawTag(49);
      output.WriteDouble(CameraZ);
    }
    if (HasDetails) {
      output.WriteRawTag(58);
      output.WriteString(Details);
    }
    if (HasWorldX) {
      output.WriteRawTag(65);
      output.WriteDouble(WorldX);
    }
    if (HasWorldY) {
      output.WriteRawTag(73);
      output.WriteDouble(WorldY);
    }
    if (HasWorldZ) {
      output.WriteRawTag(81);
      output.WriteDouble(WorldZ);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCameraX) {
      size += 1 + 8;
    }
    if (HasCameraY) {
      size += 1 + 8;
    }
    if (HasCameraZ) {
      size += 1 + 8;
    }
    if (HasDetails) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Details);
    }
    if (HasWorldX) {
      size += 1 + 8;
    }
    if (HasWorldY) {
      size += 1 + 8;
    }
    if (HasWorldZ) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(FingerPoseData other) {
    if (other == null) {
      return;
    }
    if (other.HasCameraX) {
      CameraX = other.CameraX;
    }
    if (other.HasCameraY) {
      CameraY = other.CameraY;
    }
    if (other.HasCameraZ) {
      CameraZ = other.CameraZ;
    }
    if (other.HasDetails) {
      Details = other.Details;
    }
    if (other.HasWorldX) {
      WorldX = other.WorldX;
    }
    if (other.HasWorldY) {
      WorldY = other.WorldY;
    }
    if (other.HasWorldZ) {
      WorldZ = other.WorldZ;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 33: {
          CameraX = input.ReadDouble();
          break;
        }
        case 41: {
          CameraY = input.ReadDouble();
          break;
        }
        case 49: {
          CameraZ = input.ReadDouble();
          break;
        }
        case 58: {
          Details = input.ReadString();
          break;
        }
        case 65: {
          WorldX = input.ReadDouble();
          break;
        }
        case 73: {
          WorldY = input.ReadDouble();
          break;
        }
        case 81: {
          WorldZ = input.ReadDouble();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 33: {
          CameraX = input.ReadDouble();
          break;
        }
        case 41: {
          CameraY = input.ReadDouble();
          break;
        }
        case 49: {
          CameraZ = input.ReadDouble();
          break;
        }
        case 58: {
          Details = input.ReadString();
          break;
        }
        case 65: {
          WorldX = input.ReadDouble();
          break;
        }
        case 73: {
          WorldY = input.ReadDouble();
          break;
        }
        case 81: {
          WorldZ = input.ReadDouble();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
